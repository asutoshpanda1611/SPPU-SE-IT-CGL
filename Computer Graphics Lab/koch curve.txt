#include <GL/glut.h>
#include <cmath>

// Function to draw a line segment
void drawLine(float x1, float y1, float x2, float y2) {
    glBegin(GL_LINES);
    glVertex2f(x1, y1);
    glVertex2f(x2, y2);
    glEnd();
}

// Function to recursively draw the Koch curve
void drawKochCurve(float x1, float y1, float x2, float y2, int iterations) {
    if (iterations == 0) {
        drawLine(x1, y1, x2, y2);
    } else {
        float deltaX = x2 - x1;
        float deltaY = y2 - y1;

        float x3 = x1 + deltaX / 3;
        float y3 = y1 + deltaY / 3;

        float x4 = x1 + 2 * deltaX / 3;
        float y4 = y1 + 2 * deltaY / 3;

        float x5 = x3 + (x4 - x3) * 0.5 - (y4 - y3) * sqrt(3) / 2;
        float y5 = y3 + (y4 - y3) * 0.5 + (x4 - x3) * sqrt(3) / 2;

        drawKochCurve(x1, y1, x3, y3, iterations - 1);
        drawKochCurve(x3, y3, x5, y5, iterations - 1);
        drawKochCurve(x5, y5, x4, y4, iterations - 1);
        drawKochCurve(x4, y4, x2, y2, iterations - 1);
    }
}

// Function to initialize OpenGL
void init() {
    glClearColor(1.0, 1.0, 1.0, 0.0);
    glMatrixMode(GL_PROJECTION);
    gluOrtho2D(0.0, 800.0, 0.0, 600.0);
}

// Function to display the Koch curve
void display() {
    glClear(GL_COLOR_BUFFER_BIT);
    glColor3f(0.0, 0.0, 0.0);
    drawKochCurve(100.0, 300.0, 700.0, 300.0, 4); // Adjust coordinates and iterations as needed
    glFlush();
}

// Main function
int main(int argc, char** argv) {
    glutInit(&argc, argv);
    glutInitDisplayMode(GLUT_SINGLE | GLUT_RGB);
    glutInitWindowSize(800, 600);
    glutInitWindowPosition(100, 100);
    glutCreateWindow("Koch Curve");
    init();
    glutDisplayFunc(display);
    glutMainLoop();
    return 0;
}


Koch curve sahi wala